<!DOCTYPE html>
<html lang="pl">
<head>
  <meta charset="UTF-8" />
  <title>ExploRide ‚Äì Wielka Mapa Urbexu</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    html, body { margin: 0; padding: 0; height: 100%; font-family: sans-serif; }
    #map, #sidebar, #basemap-switcher { display: none; }
    #map { position: absolute; top: 0; left: 300px; right: 250px; bottom: 0; }
    #sidebar {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 300px;
      background: #f8f8f8;
      overflow-y: auto;
      border-right: 1px solid #ccc;
      padding: 10px;
    }
    #basemap-switcher {
      position: absolute;
      top: 0;
      right: 0;
      width: 250px;
      height: 100%;
      background: #f8f8f8;
      border-left: 1px solid #ccc;
      padding: 10px;
      overflow-y: auto;
    }
    #wyszukiwarka { width: 100%; margin-bottom: 10px; padding: 5px; }
    .pinezka { margin: 5px 0; cursor: pointer; color: #007bff; }
    .pinezka:hover { text-decoration: underline; }
    .warstwa { margin-bottom: 10px; cursor: move; }
    .dragging { opacity: 0.5; }
    .warstwa h3 { margin: 5px 0; font-size: 16px; display: flex; justify-content: space-between; align-items: center; cursor: pointer; }
    .warstwa input[type="checkbox"] { margin-right: 5px; }
    .pinezki-lista { margin-left: 10px; display: block; }
    .ukryta { display: none; }
    #ekran-logowania {
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: white;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    #loginBtn {
      font-size: 18px;
      padding: 10px 20px;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .hillshade-dark { filter: grayscale(100%) brightness(60%); }
  </style>
</head>
<body>
  <div id="ekran-logowania"><button id="loginBtn">Zaloguj siƒô przez Google</button></div>
  <div id="sidebar">
    <input type="text" id="wyszukiwarka" placeholder="Szukaj pinezki...">
    <div id="lista-warstw"></div>
  </div>
  <div id="map"></div>
  <div id="basemap-switcher">
    <h3>Rodzaj mapy</h3>
    <label><input type="radio" name="basemap" value="sat" checked> Satelitarna + miasta + drogi</label><br>
    <label><input type="radio" name="basemap" value="hill"> Cieniowanie + miasta + drogi</label>
  </div>

  <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-auth-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore-compat.js"></script>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

  <script>
    const firebaseConfig = {
      apiKey: "AIzaSyBj8xPy81NaxFwHmBL3ni_UVjYKFZflyv0",
      authDomain: "exploridemap.firebaseapp.com",
      projectId: "exploridemap",
      storageBucket: "exploridemap.firebasestorage.app",
      messagingSenderId: "1074659589759",
      appId: "1:1074659589759:web:f8bdffc15d41d47ac8094a"
    };
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();

    document.getElementById("loginBtn").addEventListener("click", () => {
      const provider = new firebase.auth.GoogleAuthProvider();
      firebase.auth().signInWithPopup(provider);
    });

    firebase.auth().onAuthStateChanged(user => {
      if (!user) return;
      if (user.email !== "eksplorajder@gmail.com") {
        alert("Brak dostƒôpu.");
        return;
      }
      document.getElementById("ekran-logowania").style.display = "none";
      document.getElementById("map").style.display = "block";
      document.getElementById("sidebar").style.display = "block";
      document.getElementById("basemap-switcher").style.display = "block";
      initMap();
      zaladujPinezkiZFirestore();
    });

    let map, baseLayer;
    const warstwy = {};
    let wszystkiePinezki = [];
    let draggedLayer = null;

    function initMap() {
      map = L.map('map').setView([52.1, 20.9], 7);

      const sat = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: 'Esri'
      });
      const hill = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Elevation/World_Hillshade/MapServer/tile/{z}/{y}/{x}', {
        attribution: 'Esri',
        className: 'hillshade-dark'
      });
      const labels = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}');
      const roads = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}');

      baseLayer = sat;
      baseLayer.addTo(map);
      labels.addTo(map);
      roads.addTo(map);

      document.querySelectorAll('input[name="basemap"]').forEach(radio => {
        radio.addEventListener('change', () => {
          map.removeLayer(baseLayer);
          baseLayer = (radio.value === 'sat') ? sat : hill;
          baseLayer.addTo(map);
          map.removeLayer(labels); map.removeLayer(roads);
          labels.addTo(map); roads.addTo(map);
        });
      });

      map.on('click', onMapClick);
    }

    function zaladujPinezkiZFirestore() {
      db.collection("pinezki").get().then(snapshot => {
        snapshot.forEach(doc => {
          const p = doc.data();
          const id = doc.id;
          const warstwaNazwa = p.warstwa || "Inne";
      if (!warstwy[warstwaNazwa]) {
            warstwy[warstwaNazwa] = {
              lista: [],
              layer: L.layerGroup().addTo(map)
            };
          }
          const marker = L.marker([p.lat, p.lng]).addTo(warstwy[warstwaNazwa].layer);
          marker.bindPopup(`<b>${p.nazwa}</b><br>${p.opis}<br>${parseFloat(p.lat).toFixed(5)}, ${parseFloat(p.lng).toFixed(5)}<br><a href="https://maps.google.com/?q=${p.lat},${p.lng}" target="_blank">üìç Google Maps</a><br><br><button onclick="edytuj('${id}', ${p.lat}, ${p.lng})">‚úèÔ∏è Edytuj</button>`);
          p.marker = marker;
          p.id = id;
          warstwy[warstwaNazwa].lista.push(p);
          wszystkiePinezki.push(p);
        });
        generujListeWarstw();
      })
      .catch(err => {
        console.error("B≈ÇƒÖd pobierania pinezek:", err);
        generujListeWarstw();
      });
    }

    function edytuj(id, lat, lng) {
      db.collection("pinezki").doc(id).get().then(doc => {
        const p = doc.data();
        const container = document.createElement("div");
        container.innerHTML = `
          <input id="enazwa" value="${p.nazwa}" style="width: 100%"><br>
          <textarea id="eopis" style="width: 100%">${p.opis}</textarea><br>
          <input id="ewarstwa" value="${p.warstwa}" style="width: 100%"><br>
          <button onclick="zapisz('${id}')">üíæ Zapisz</button>
          <button onclick="location.reload()">Anuluj</button>
        `;
        const marker = findMarkerByLatLng(lat, lng);
        if (marker) marker.bindPopup(container).openPopup();
      });
    }

    function zapisz(id) {
      const nowa = {
        nazwa: document.getElementById("enazwa").value,
        opis: document.getElementById("eopis").value,
        warstwa: document.getElementById("ewarstwa").value
      };
      db.collection("pinezki").doc(id).update(nowa).then(() => location.reload());
    }

    function onMapClick(e) {
      const warstwaOptions = Object.keys(warstwy).map(n => `<option value="${n}">${n}</option>`).join('');
      const container = document.createElement('div');
      container.innerHTML = `
        <input id="nazwaNew" placeholder="Nazwa" style="width: 100%"><br>
        <textarea id="opisNew" placeholder="Opis" style="width: 100%"></textarea><br>
        <select id="warstwaNew" style="width: 100%">${warstwaOptions}</select><br>
        <button id="saveNew">üíæ Zapisz</button>
        <button id="cancelNew">Anuluj</button>
      `;
      const popup = L.popup()
        .setLatLng(e.latlng)
        .setContent(container)
        .openOn(map);

      container.querySelector('#saveNew').addEventListener('click', () => {
        const data = {
          nazwa: container.querySelector('#nazwaNew').value,
          opis: container.querySelector('#opisNew').value,
          warstwa: container.querySelector('#warstwaNew').value,
          lat: e.latlng.lat,
          lng: e.latlng.lng
        };
        db.collection('pinezki').add(data).then(() => location.reload());
      });

      container.querySelector('#cancelNew').addEventListener('click', () => {
        map.closePopup(popup);
      });
    }

    function findMarkerByLatLng(lat, lng) {
      for (const layer of Object.values(map._layers)) {
        if (layer.getLatLng && layer.getLatLng().lat === lat && layer.getLatLng().lng === lng) {
          return layer;
        }
      }
      return null;
    }

    function loadLayerOrder() {
      try {
        return JSON.parse(localStorage.getItem('warstwaOrder')) || [];
      } catch (e) {
        return [];
      }
    }

    function saveLayerOrder() {
      const order = Array.from(document.querySelectorAll('#lista-warstw .warstwa'))
        .map(el => el.dataset.nazwa);
      localStorage.setItem('warstwaOrder', JSON.stringify(order));
    }

    function setupDrag(div) {
      div.draggable = true;
      div.addEventListener('dragstart', () => {
        draggedLayer = div;
        div.classList.add('dragging');
      });
      div.addEventListener('dragend', () => {
        div.classList.remove('dragging');
        draggedLayer = null;
      });
      div.addEventListener('dragover', e => e.preventDefault());
      div.addEventListener('drop', e => {
        e.preventDefault();
        if (draggedLayer && draggedLayer !== div) {
          const lista = document.getElementById('lista-warstw');
          lista.insertBefore(draggedLayer, div);
          saveLayerOrder();
        }
      });
    }

    function generujListeWarstw() {
      const lista = document.getElementById("lista-warstw");
      lista.innerHTML = "";
      const saved = loadLayerOrder();
      const nazwy = [...saved.filter(n => warstwy[n]), ...Object.keys(warstwy).filter(n => !saved.includes(n))];
      nazwy.forEach(nazwa => {
        const div = document.createElement("div");
        div.className = "warstwa";
        div.dataset.nazwa = nazwa;
        setupDrag(div);
        const h3 = document.createElement("h3");
        const checkbox = document.createElement("input");
        checkbox.type = "checkbox";
        checkbox.checked = true;
        checkbox.onchange = () => {
          if (checkbox.checked) {
            warstwy[nazwa].layer.addTo(map);
          } else {
            map.removeLayer(warstwy[nazwa].layer);
          }
        };
        const label = document.createElement("span");
        label.textContent = `${nazwa} (${warstwy[nazwa].lista.length})`;
        const left = document.createElement("span");
        left.appendChild(checkbox);
        left.appendChild(label);
        const toggleBtn = document.createElement("span");
        toggleBtn.textContent = "üîΩ";
        toggleBtn.style.cursor = "pointer";
        h3.appendChild(left);
        h3.appendChild(toggleBtn);
        div.appendChild(h3);

        const listaP = document.createElement("div");
        listaP.className = "pinezki-lista";

        warstwy[nazwa].lista.forEach(p => {
          const el = document.createElement("div");
          el.className = "pinezka";
          el.textContent = p.nazwa;
          el.onclick = () => {
            map.setView([p.lat, p.lng], 16);
            p.marker.openPopup();
          };
          listaP.appendChild(el);
        });

        toggleBtn.onclick = () => {
          listaP.classList.toggle("ukryta");
          toggleBtn.textContent = listaP.classList.contains("ukryta") ? "‚ñ∂Ô∏è" : "üîΩ";
        };

        div.appendChild(listaP);
        lista.appendChild(div);
      });
      saveLayerOrder();

      document.getElementById("wyszukiwarka").addEventListener("input", e => {
        const q = e.target.value.toLowerCase();
        document.querySelectorAll(".pinezka").forEach(el => {
          el.style.display = el.textContent.toLowerCase().includes(q) ? "block" : "none";
        });
      });
    }
  </script>
</body>
</html>
